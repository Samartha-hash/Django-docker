# Updated pipeline config - force refresh

variables:
  REPO: "samartha126"
  TAG: "latest"

stages:
  - build
  - push
  - deploy

# Build all images
build:
  stage: build
  image: docker:24.0
  services:
    - docker:dind
  script:
    # Quick file verification and build
    - |
      echo "üîç Verifying files and building images..."
      
      # Check required files
      for file in DevOps/docker-compose.yml DevOps/Dockerfile.{backend,frontend,sqlserver} DevOps/nginx.conf DevOps/deploy.sh frontend/package.json; do
        [ -f "$file" ] || { echo "‚ùå $file missing!"; exit 1; }
      done
      
      # Build all images
      for service in frontend backend sqlserver; do
        echo "üî® Building $service..."
        docker build -t "$REPO/lms-$service:$TAG" -f "DevOps/Dockerfile.$service" . ||
        { echo "‚ùå Build failed for $service"; exit 1; }
      done
      
      echo "‚úÖ All images built successfully"
  artifacts:
    paths:
      - DevOps/
    expire_in: 1h
  tags:
    - cicd

# Push all images to registry
push:
  stage: push
  image: docker:24.0
  services:
    - docker:dind
  before_script:
    - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
  script:
    - |
      echo "üì§ Pushing all images to Docker Hub..."
      
      for service in frontend backend sqlserver; do
        echo "Pushing $service..."
        docker push "$REPO/lms-$service:$TAG" ||
        { echo "‚ùå Push failed for $service"; exit 1; }
      done
      
      echo "‚úÖ All images pushed successfully"
  dependencies:
    - build
  only:
    - main
  tags:
    - cicd

# Deploy application
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache bash
  script:
    - |
      echo "üöÄ Deploying application..."
      chmod +x DevOps/deploy.sh
      ./DevOps/deploy.sh
      echo "‚úÖ Deployment completed"
  dependencies:
    - build
  only:
    - main
  tags:
    - cicd


